@model FCV_DutchLadyMail_Model.Models.ContactLists

@{
    ViewBag.Title = "Contact List Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
    <style>
        hr {
             margin-top: 0; 
             margin-bottom: 0; 
            border: 0;
            border-top: 1px solid #eee;
        }
    </style>
    <link rel="stylesheet" href="~/Content/lib/data-table/dataTables.bootstrap.min.css" />
    <script src="~/Content/js/lib/datatables/jquery.dataTables.min.js"></script>
    <script src="~/Content/js/lib/datatables/dataTables.bootstrap.min.js"></script>
    <style type="text/css">
        .table-responsive[data-pattern="priority-columns"] > .table > thead > tr > th, .table-responsive[data-pattern="priority-columns"] > .table > tbody > tr > th, .table-responsive[data-pattern="priority-columns"] > .table > tfoot > tr > th, .table-responsive[data-pattern="priority-columns"] > .table > thead > tr > td, .table-responsive[data-pattern="priority-columns"] > .table > tbody > tr > td, .table-responsive[data-pattern="priority-columns"] > .table > tfoot > tr > td {
            min-width: 20px;
            max-width: 500px;
            white-space: normal;
        }

        div.dataTables_wrapper div.dataTables_filter input {
            margin-left: 0.5em;
            display: inline-block;
            width: 300px;
        }

        .sticky-table-header.fixed-solution {
            min-width: 0;
            position: fixed;
            height: 0px !important;
        }
        .col-md-10{
            margin-top:5px;
        }
    </style>
}
<div class="container" style="padding-top: 10px; width: 100%;">
    
    <div  style="padding-top: 10px; width: 100%">
        @using (Html.BeginForm("Edit", "ContactList", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.ID, new { @class = "control-label col-md-2" })
            @Html.HiddenFor(model => model.CreatedBy, new { @class = "control-label col-md-2" })
            @Html.HiddenFor(model => model.CreationTime, new { @class = "control-label col-md-2" })
            @Html.HiddenFor(model => model.LastUpdatedBy, new { @class = "control-label col-md-2" })
            @Html.HiddenFor(model => model.LastUpdateTime, new { @class = "control-label col-md-2" })
            @Html.HiddenFor(model => model.LastImportFileName, new { @class = "control-label col-md-2" })
            <div class="form-horizontal">
                <hr />
                <div class="form-group">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        <label class="control-label col-md-2">Creation Time</label>
                        <div class="col-md-10">
                            @Html.DisplayFor(model => model.CreationTime, new { @class = "control-label col-md-2" })
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="control-label col-md-2">Creation By</label>
                        <div class="col-md-10">
                            @Html.DisplayFor(model => model.CreatedBy, new { @class = "control-label col-md-2" })
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="control-label col-md-2">Last Updated By</label>
                        <div class="col-md-10">
                            @Html.DisplayFor(model => model.LastUpdatedBy, new { @class = "control-label col-md-2" })
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="control-label col-md-2">Last Update Time</label>
                        <div class="col-md-10">
                            @Html.DisplayFor(model => model.LastUpdateTime, new { @class = "control-label col-md-2" })
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="control-label col-md-2">LastImportFileName</label>
                        <div class="col-md-10">
                            @Html.DisplayFor(model => model.LastImportFileName, new { @class = "control-label col-md-2" })
                        </div>
                    </div>
                    @Html.HiddenFor(model => model.ID, new { @class = "control-label col-md-2" })

                    <div class="form-group">
                        <label class="control-label col-md-2">Name</label>
                        <div class="col-md-10">
                            @Html.TextBoxFor(model => model.Name, "", new { @type = "text", @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(model => model.Description, "", new { @type = "text", @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Remarks, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextAreaFor(model => model.Remarks, 5, 40, new { @type = "text", @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Update" class="btn btn-primary" />
                        </div>
                    </div>
                </div>
          </div>
        }
    </div>

    <hr style="margin-bottom:20px;"/>
    @Html.ActionLink("Import Contact List", "ImportContactList", new { id = Model.ID }, new { @class = "btn btn-primary" })
    <input type="submit" id="export" name="sub" value="Export" class="btn btn-danger btn-md" tabindex="9">
    @Html.ActionLink("Download Template Contact", "DownloadFile",null, new { @class = "btn btn-primary", @style = "float:right;" })
    <hr style="margin-top:20px; "/>
    <br />
    <fieldset style="margin-top:5px;padding: 1em; font: 100%; color: Black; border-color: Black; border-style: solid;
    border-width: thin; border-color: Silver; width: 100%">
        <legend><strong>Contacts in <span style="color:red">@Model.Name</span> </strong></legend>
        <br />
        <table class="table table-bordered table-hover" border="1" width="100%" cellpadding="0" cellspacing="0" id="data_table">
            <thead>
                <tr>
                    <th></th>
                    <th>
                        Email
                    </th>
                    <th>
                        Name
                    </th>
                    <th>
                        Phone
                    </th>
                    <th>
                        Company
                    </th>
                    @*<th>Active</th>*@
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.CONTACTs)
                {
                    <tr>
                        <td></td>
                        <td style="width:20%">
                            @Html.DisplayFor(modelItem => item.Email)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Name)
                        </td>
                        <td style="width:15%">
                            @Html.DisplayFor(modelItem => item.Phone)
                        </td>
                        <td style="width:35%">
                            @Html.DisplayFor(modelItem => item.Company)
                        </td>
                        
                    </tr>
                }
            </tbody>
        </table>

    </fieldset>

    <input type="hidden" id="IdContactL" value="@Model.ID" />



        <div class="col-md-12" style="padding-bottom:10px; padding-left:0px;padding-top:20px">
            @Html.ActionLink("Go to Contact List", "Index", new { controller = "ContactList" }, new { @class = "btn btn-danger" })
        </div>
</div>


<script type="text/javascript">

    var t = $('#data_table').DataTable({
        "bAutoWidth": true,
        "language": {
            "search": "Quick filter records:",
            "columnDefs": [{
                "searchable": false,
                "orderable": false,
                "targets": 0
            }],
            "order": [[1, 'asc']]

        }
    });
    t.on('order.dt search.dt', function () {
        t.column(0, { search: 'applied', order: 'applied' }).nodes().each(function (cell, i) {
            cell.innerHTML = i + 1;
        });
    }).draw();

    $(".collapse.in").each(function () {
        $(this).siblings(".panel-heading").find(".glyphicon").addClass("glyphicon-minus").removeClass("glyphicon-plus");
    });

    // Toggle plus minus icon on show hide of collapse element
    $(".collapse").on('show.bs.collapse', function () {
        $(this).parent().find(".glyphicon").removeClass("glyphicon-plus").addClass("glyphicon-minus");
    }).on('hide.bs.collapse', function () {
        $(this).parent().find(".glyphicon").removeClass("glyphicon-minus").addClass("glyphicon-plus");
    });

    $("#export").click(function () {
        var id = $("#IdContactL").val();
        //window.location = '/Distributors/ExportExcel';
        $.ajax({
            type: "GET",
            url: '@Url.Action("ExportExcel", "ContactList", new { id = Model.ID })',
            async: true,
            error: function (xhr, status) {
            },
            success: function (response) {
                window.location = '/ContactList/ExportExcel/'+id;
            }
        })
    });
</script>